{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","constants.js","actions.js","api/api.js","containers/App.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","boder","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","requestRobots","dispatch","link","fetch","then","response","json","data","payload","catch","App","searchfield","useSelector","searchRobots","searchField","isPending","useDispatch","filteredRobots","filter","robot","toLocaleLowerCase","includes","useEffect","event","text","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad8a4dd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card  = ({id, name, email}) => {\n    return (\n        <div className=\"bg-light-green dib br3 pd3 ma2 grow bw2 shadow-5 \">\n            <img\n                src={`https://robohash.org/${id}?200x200`} alt=\"robots\"\n            />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n            {robots.map((user, i) => {\n                return (\n                    <Card\n                        key={i}\n                        name={robots[i].name}\n                        id={robots[i].id}\n                        email={robots[i].email}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default CardList","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2 \">\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\"\n                placeholder=\"Search Robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;\n","// import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY:'scroll', boder:'1px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\n\nexport default Scroll","import React, {Component} from 'react';\n\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState( {\n            hasError: true\n        })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry","import React, { Component } from 'react';\n\nclass CounterButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n            count: 0,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.count !== nextState.count) {\n            return true;\n        }\n        return false\n    }\n\n    updateCount = () => {\n        this.setState((state) => {\n            return { count: state.count + 1 };\n        });\n    };\n\n    render() {\n        return (\n            <button color={this.props.color} onClick={this.updateCount}>\n                Count: {this.state.count}\n            </button>\n        );\n    }\n}\n\nexport default CounterButton;\n\n//\n","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component{\n    shouldComponentUpdate(nextProps, nextState){\n        return false\n    }\n    render(){\n        return(\n            <div>\n                <h1 className=\"f1\">ROBOFRIENDS</h1>\n                <CounterButton color={'red'}/>\n            </div>\n        )\n    }\n}\n\nexport default Header","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'; \n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {apiCall} from './api/api'\nimport {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\n    apiCall('https://jsonplaceholder.typicode.com/users')\n        .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n        .catch((error) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload:error}));\n};\n","export const apiCall = (link) =>\n    fetch(link).then((response) => response.json());\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// ---- Components\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header';\n// ----\n\n// ---- Styles\nimport './App.css';\n// ----\n\n// ---- Actions\nimport { requestRobots, setSearchField } from '../actions';\n// ----\n\nfunction App() {\n    const searchfield = useSelector((state) => state.searchRobots.searchField);\n    const robots = useSelector((state) => state.requestRobots.robots);\n    const isPending = useSelector((state) => state.requestRobots.isPending);\n    const error = useSelector((state) => state.requestRobots.error);\n\n    const dispatch = useDispatch();\n\n    const onSearchChange = (event) =>\n        dispatch(setSearchField(event.target.value));\n\n    const filteredRobots = robots.filter((robot) => {\n        return robot.name\n            .toLocaleLowerCase()\n            .includes(searchfield.toLocaleLowerCase());\n    });\n\n    useEffect(() => {\n        const onRequestRobots = () => dispatch(requestRobots());\n        onRequestRobots();\n    }, [dispatch]);\n\n    if (!error) {\n        return isPending ? (\n            <h1 className=\"tc\">Loading...</h1>\n        ) : (\n            <div className=\"tc\">\n                <Header />\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n    } else {\n        return <h1 className=\"tc\">Ooops, something went wrong.</h1>;\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nconst initialStateSearch = {\n    searchField: '',\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return { ...state, searchField: action.payload };\n        default:\n            return state;\n    }\n};\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: '',\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return { ...state, isPending: true };\n        case REQUEST_ROBOTS_SUCCESS:\n            return { ...state, robots: action.payload, isPending: false };\n        case REQUEST_ROBOTS_FAILED:\n            return { ...state, error: action.payload, isPending: false };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk'\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger();\nconst rootReducers = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}